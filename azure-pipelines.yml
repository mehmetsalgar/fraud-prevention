# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: CalculateVersion
    displayName: Calculate Version
    pool:
      vmImage: ubuntu-latest
    steps:
     - task: gitversion/setup@0
       displayName: Install GitVersion
       inputs:
        versionSpec: "5.x"
     - task: gitversion/execute@0
       name: calculateVersion
       displayName: Calculating version
       inputs:
        useConfigFile: True
        configFilePath: "GitVersion.yml"
  - job: Build
    displayName: Build
    dependsOn: CalculateVersion
    pool:
      vmImage: ubuntu-latest
    variables:
      version: $[dependencies.CalculateVersion.outputs['calculateVersion.GitVersion.SemVer']]
    steps:
     - task: Gradle@3
       inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m -P$(version)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'

